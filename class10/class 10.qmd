---
title: "Class 10: Halloween Mini Project"
author: Simran Patel
format: pdf
---
```{r}
# webshot::install_phantomjs()
```

# Importing candy data

```{r}
candy = read.csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/candy-power-ranking/candy-data.csv", row.names=1)
head(candy)
```
#Q1. How many different candy types are in this dataset?

```{r}
nrow(candy)
```

There are 85 different candy types in the dataset.

#Q2. How many fruity candy types are in the dataset?

```{r}
sum(candy$fruity)
```

There are 38 different candy types in the dataset.

# What is your favorate candy?

We can use the 'winpercent' function to find percentage of people who prefer a candy over another random candy.

```{r}
candy["Twix", ]$winpercent
```

# Q3. What is your favorite candy in the dataset and what is it’s winpercent value?

```{r}
candy["Snickers", ]$winpercent
```

My favorite candy is Snickers and the winpercent is 76.67%.

# Q4. What is the winpercent value for “Kit Kat”?

```{r}
candy["Kit Kat", ]$winpercent
```

# Q5. What is the winpercent value for “Tootsie Roll Snack Bars”?

```{r}
candy["Tootsie Roll Snack Bars", ]$winpercent
```

The win percent of Tootsie Roll Snack Bars is 49.65%.

Let's install the skimr package.

```{r}
# install.packages("skimr")
library("skimr")
skim(candy)
```

# Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?

The winpercent appears to be on a differ scale compared to the other rows as it is not on the zero to one scale.

# Q7. What do you think a zero and one represent for the candy$chocolate column?

A zero most likely represents if the candy has chocolate (1) or not (0).

Let's plot the data in a histogram

#Q8. Plot a histogram of winpercent values

```{r}
hist(candy$winpercent)
```

# Q9. Is the distribution of winpercent values symmetrical?

The distribution is not symmetrical, it is slightly skewed to the right.

# Q10. Is the center of the distribution above or below 50%?

The center of distribution is below 50%.

# Q11. On average is chocolate candy higher or lower ranked than fruit candy?

```{r}
mean(candy$winpercent[as.logical(candy$chocolate)])
mean(candy$winpercent[as.logical(candy$fruity)])
```

On avergae, the chocolate candy ranks higher than the fruity candy. 

# Q12. Is this difference statistically significant?

```{r}
t.test(candy$winpercent[as.logical(candy$chocolate)], candy$winpercent[as.logical(candy$fruity)])
```

The p value is less than 0.05 indicating that the data is significantly different and there is a clear favoring towards chcoclate candy and fruity candy.

# Overall Candy Rankings

# Q13. What are the five least liked candy types in this set?

```{r}
head(candy[order(candy$winpercent),], n=5)
```

The top 5 least liked candy is the Nik L Nip, Boston Baked Beans, Chiclets, Super Bubble, and Jawbusters. 
# Q14. What are the top 5 all time favorite candy types out of this set?

```{r}
tail(candy[order(candy$winpercent),], n=5)
```

Thew top 5 most liked candies are Snickers, Kit Kat, Twix, Reeses minis, and Resses Peanut Butter Cups. 

# Q15. Make a first barplot of candy ranking based on winpercent values.

```{r}
library("ggplot2")

ggplot(candy) + 
  aes(winpercent, rownames(candy)) +
  geom_col()
```

# Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent?

```{r}
library("ggplot2")

ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy),winpercent)) +
  geom_col()
```

Time to add some useful color

```{r}
my_cols=rep("black", nrow(candy))
my_cols[as.logical(candy$chocolate)] = "chocolate"
my_cols[as.logical(candy$bar)] = "brown"
my_cols[as.logical(candy$fruity)] = "pink"
```

```{r}
ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy),winpercent)) +
  geom_col(fill=my_cols) 
```

# Q17. What is the worst ranked chocolate candy?

The worst ranekd chocolate candy is sixlets.

# Q18. What is the best ranked fruity candy?

The best ranked fruity candy is starburst.

# Taking a look at pricepercent

What is the the best candy for the least money? 

```{r}
library(ggrepel)

# How about a plot of price vs win
ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) + 
  geom_text_repel(col=my_cols, size=3.3, max.overlaps = 5)
```

```{r}
ord <- order(candy$pricepercent, decreasing = TRUE)
head( candy[ord,c(11,12)], n=5 )
```

# Q19. Which candy type is the highest ranked in terms of winpercent for the least money - i.e. offers the most bang for your buck?

Reeses miniatures offers the most bang for your buck.

# Q20. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?

The top 5 most expensive candies are Nip L Nips, Nestle Smarties, Ring pop, Hershey Krackel, and Hershey Milk Chocolate. Out of these the Nik L Nips are the least popular. 

# Q21
Make a barplot again with geom_col() this time using pricepercent and then improve this step by step, first ordering the x-axis by value and finally making a so called “dot chat” or “lollipop” chart by swapping geom_col() for geom_point() + geom_segment().

```{r}
library("ggplot2")

ggplot(candy) + 
  aes(pricepercent, rownames(candy)) +
  geom_col()
```

Let's order this.

```{r}
ggplot(candy) + 
  aes(pricepercent, reorder(rownames(candy),pricepercent)) +
  geom_col()
```

Let's change this to a lollipop chart.

```{r}
ggplot(candy) +
  aes(pricepercent, reorder(rownames(candy), pricepercent)) +
  geom_segment(aes(yend = reorder(rownames(candy), pricepercent), 
                   xend = 0), col="gray40") +
    geom_point()
```

# Exploring the correlation structure

```{r}
library(corrplot)
```

```{r}
cij <- cor(candy)
corrplot(cij)
```

# Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

Chocolate and fruity candies are anti correlated. 

# Q23. Similarly, what two variables are most positively correlated?

The variables that are the most positively correlated are chocolate and bar. 

# Principal Component Analysis

```{r}
pca <- prcomp(candy, scale = TRUE)
summary(pca)
```

Now we can plot our main PCA score plot of PC1 vs PC2.

```{r}
plot(pca$rotation[,1])
```

```{r}
plot(pca$x[,1:2], col=my_cols, pch=16)
```

We can make a much nicer plot with the ggplot2 package.

```{r}
# Make a new data-frame with our PCA results and candy data
my_data <- cbind(candy, pca$x[,1:3])
```

```{r}
p <- ggplot(my_data) + 
        aes(x=PC1, y=PC2, 
            size=winpercent/100,  
            text=rownames(my_data),
            label=rownames(my_data)) +
        geom_point(col=my_cols)

p
```

Again we can use the ggrepel package and the function ggrepel::geom_text_repel() to label up the plot with non overlapping candy names.

```{r}
library(ggrepel)

p + geom_text_repel(size=3.3, col=my_cols, max.overlaps = 7)  + 
  theme(legend.position = "none") +
  labs(title="Halloween Candy PCA Space",
       subtitle="Colored by type: chocolate bar (dark brown), chocolate other (light brown), fruity (red), other (black)",
       caption="Data from 538")
```
You can change the max.overlaps value to allow more overlapping labels or pass the ggplot object p to plotly like so to generate an interactive plot that you can mouse over to see labels:

```{r}
# install.packages("plotly")
library(plotly)
ggplotly(p)
```

Let’s finish by taking a quick look at PCA our loadings. Do these make sense to you? Notice the opposite effects of chocolate and fruity and the similar effects of chocolate and bar (i.e. we already know they are correlated).

```{r}
par(mar=c(8,4,2,2))
barplot(pca$rotation[,1], las=2, ylab="PC1 Contribution")
```

#Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?

Fruity, hard, and pluribus were all strongly picked up by PC1 in the postive direction. This makes sense as most fruity candies are hard and most candies that come in a box are fruity and hard.
